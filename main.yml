---
- name: mains playbook
  hosts: clients
  become: yes
  remote_user: ubuntu
  become_method: sudo

  tasks:
    - name: update time and date
      shell: timedatectl set-timezone Africa/Lagos

    - name: set hostname
      shell: hostnamectl set-hostname ec2-34-228-41-69.compute-1.amazonaws.com # www.ozirichigozie.me
    
    - name: update and upgrade cache
      shell: apt update -y && apt upgrade -y
    
    - name: install packages
      apt:
        name:
          - python3-pip
          - git
          - lsb-release
          - ca-certificates
          - apt-transport-https
          - software-properties-common
          - gnupg2
          - curl
          - wget
          - debconf-utils
          - libaio1
        update_cache: true
    
    - name: install PyMySQL
      shell: python3 -m pip install PyMySQL
    
    - name: install cryptography
      shell: pip install cryptography
    
    - name: install apache2 and apache2-utils
      apt:
        name: 
          - apache2 
          - apache2-utils
        update_cache: true
    
    - name: install package update and upgrade
      apt:
        update_cache: true
        upgrade: true
    
    - name: install php dependencies
      apt:
        name: 
          - libapache2-mod-php8.1
          - php8.1-fpm
          - php8.1-cli
          - php8.1-common
          - php8.1-mysql
          - php8.1-opcache
          - php8.1-soap
          - php8.1-zip
          - php8.1-intl
          - php8.1-bcmath
          - php8.1-xml
          - php8.1-xmlrpc
          - php8.1-curl
          - php8.1-gd
          - php8.1-imagick
          - php8.1-dev
          - php8.1-imap
          - php8.1-mbstring
        update_cache: true

    - name: get composer
      shell: php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
    
    - name: verify composer installer
      shell: php -r "if (hash_file('sha384', 'composer-setup.php') === '55ce33d7678c5a611085589f1f3ddf8b3c52d662cd01d4ba75c0ee0459970c2200a51f492d557530c71c15d8dba01eae') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
    
    - name: setup composer
      shell: php composer-setup.php # --install-dir=/usr/local/bin/ --filename=composer --no-scripts --no-interaction

    - name: unlink composer setup
      shell: php -r "unlink('composer-setup.php');"

    - name: move composer.phar to /usr/local/bin/composer
      shell: mv composer.phar /usr/local/bin/composer
    
    - name: setup mysql-8.0 server
      shell:
        debconf-set-selections <<EOF
        mysql-apt-config mysql-apt-config/select-server select mysql-8.0
        "mysql-community-server mysql-community-server/root-pass password ozirichigozie"
        "mysql-community-server mysql-community-server/re-root-pass password ozirichigozie"
        EOF
    
    - name: install mysql configuration - wget
      shell: wget --user-agent="Mozilla" -O /tmp/mysql-apt-config_0.8.24-1_all.deb https://dev.mysql.com/get/mysql-apt-config_0.8.24-1_all.deb
    
    - name: install mysql configuration - DEBIAN_FRONTEND
      shell: DEBIAN_FRONTEND=noninteractive dpkg -i /tmp/mysql-apt-config_0.8.24-1_all.deb < /dev/null > /dev/null
    
    - name: update and upgrade cache
      apt:
        update_cache: true
        upgrade: true
    
    - name: install mysql-server and mysql-client
      shell: DEBIAN_FRONTEND=noninteractive apt-get install mysql-server mysql-client --assume-yes --force-yes < /dev/null > /dev/null
    
    - name: create database ozirichigozie
      shell: 'mysql -ne "{{ item }}"'
      with_items:
        - CREATE DATABASE ozirichigozie;
    - name: create database user
      shell: 'mysql -ne "{{ item }}"'
      with_items:
        - CREATE USER 'ozirigozie'@'localhost' IDENTIFIED BY 'ozirichigozie';
    - name: grant priviliges to 'ozirigozie'@'localhost'
      shell: 'mysql -ne "{{ item }}"'
      with_items:
        - GRANT ALL PRIVILEGES ON ozirichigozie.* TO 'ozirigozie'@'localhost';
          #    - name: flush priviliges
      #      shell: 'mysql -ne "{{ item }}"'
      #      with_items:
        #        - FLUSH PRIVILEGES;
          #    - name: copy pgsql installation bash script to root
      #      copy:
        #        src: /home/ubuntu/pgsql.sh
        #        dest: /root
        #    - name: install postgresql
        #      shell: bash /root/pgsql.sh
    
    - name: cloning project repo
      git: 
        repo: https://github.com/f1amy/laravel-realworld-example-app.git 
        dest: /var/www/ozirichigozie
    
    - name: copy content to .env file
      copy:
        dest: /var/www/ozirichigozie/.env
        content: |
          APP_NAME="ozirichigozie"
          APP_ENV=local
          APP_KEY=
          APP_DEBUG=true
          APP_URL=https://localhost
          APP_PORT=3000

          LOG_CHANNEL=stack
          LOG_DEPRECATIONS_CHANNEL=null
          LOG_LEVEL=debug

          DB_CONNECTION=mysql
          DB_HOST=localhost
          DB_PORT=3306
          DB_DATABASE=ozirichigozie
          DB_USERNAME=ozirigozie
          DB_PASSWORD=ozirichigozie

          BROADCAST_DRIVER=log
          CACHE_DRIVER=file
          FILESYSTEM_DISK=local
          QUEUE_CONNECTION=sync

          SESSION_DRIVER=file
          SESSION_LIFETIME=120
          
          MEMCACHED_HOST=127.0.0.1

          REDIS_HOST=127.0.0.1
          REDIS_PASSWORD=null
          REDIS_PORT=6379

          MAIL_MAILER=smtp
          MAIL_HOST=mailhog
          MAIL_PORT=1025
          MAIL_USERNAME=null
          MAIL_PASSWORD=null
          MAIL_ENCRYPTION=null
          MAIL_FROM_ADDRESS="hello@example.com"
          MAIL_FROM_NAME="${APP_NAME}"

          AWS_ACCESS_KEY_ID=
          AWS_SECRET_ACCESS_KEY=
          AWS_DEFAULT_REGION=us-east-1
          AWS_BUCKET=
          AWS_USE_PATH_STYLE_ENDPOINT=false

          PUSHER_APP_ID=
          PUSHER_APP_KEY=
          PUSHER_APP_SECRET=
          PUSHER_APP_CLUSTER=mt1
          
          MIX_PUSHER_APP_KEY="${PUSHER_APP_KEY}"
          MIX_PUSHER_APP_CLUSTER="${PUSHER_APP_CLUSTER}"
          
          L5_SWAGGER_GENERATE_ALWAYS=true
          
          SAIL_XDEBUG_MODE=develop,debug
          SAIL_SKIP_CHECKS=true
    
    - name: block file path
      blockinfile:
        path: /var/www/ozirichigozie/routes/web.php
        marker: ""
        block: |
          Route::get('/', function () {
            return view('welcome');
          });
    
    - name: copy content to .htaccess file
      copy:
        dest: "/var/www/ozirichigozie/.htaccess"
        content: |
          <IfModule mod_rewrite.c>
            RewriteEngine On
            RewriteCond %{REQUEST_URI} !^/public/
            RewriteCond %{REQUEST_FILENAME} !-d
            RewriteCond %{REQUEST_FILENAME} !-f
            RewriteRule ^(.*)$ /public/$1
            RewriteRule ^(/)?$ public/index.php [L]
          </IfModule>

    - name: change project owner to root
      shell: chown -R root:root /var/www/ozirichigozie
    
    - name: change project file permission
      shell: chmod -R 0775 /var/www/ozirichigozie
    
    - name: change project storage file permission
      shell: chown -R 0755 /var/www/ozirichigozie/storage
    
    - name: change project file (bootstrap) permission
      shell: chown -R 0755 /var/www/ozirichigozie/bootstrap/cache

    - name: install libs and dependencies in /var/www/ozirichigozie/composer.lock
      composer:
        command: install
        working_dir: /var/www/ozirichigozie
        ignore_platform_reqs: yes
      environment: 
        COMPOSER_ALLOW_SUPERUSER: "1"
     
    - name: create project
      composer: 
        command: create-project
        working_dir: /var/www/ozirichigozie
      environment:
        COMPOSER_ALLOW_SUPERUSER: "1"

    - name: migrate artisan
      shell: php artisan migrate --seed
      ignore_errors: true
      args:
        chdir: /var/www/ozirichigozie
        warn: false

    - name: set app key
      shell: php artisan key:generate
      args:
        chdir: /var/www/ozirichigozie
  
    - name: copy configuration to ozirichigozie.conf
      copy:
        dest: "/etc/apache2/sites-available/ozirichigozie.conf"
        content: |
          <VirtualHost *:80>
              ServerAdmin webmaster@localhost
              ServerName ozirichigozie.me
              ServerAlias www.ozirichigozie.me
              DocumentRoot /var/www/ozirichigozie/public
              <Directory /var/www/ozirichigozie/public>
                  Options Indexes FollowSymLinks
                  AllowOverride All
                  Require all granted
              </Directory>
              ErrorLog ${APACHE_LOG_DIR}/error.log
              CustomLog ${APACHE_LOG_DIR}/access.log combined
          </VirtualHost>
    
    - name: disable default site configuration
      shell: a2dissite 000-default.conf
    
    - name: enable project site configuration
      shell: a2ensite ozirichigozie-le-ssl.conf
    
    - name: enable rewrite mode
      shell: a2enmod rewrite
    
    - name: restart apache
      service:
        name: apache2
        state: restarted
    
    - name: change project owner
      shell: chown -R www-data:www-data /var/www/ozirichigozie
    
    - name: install snapd
      apt:
        name:
          - snapd
    
    - name: install core
      shell: snap install core
    
    - name: refresh core
      shell: snap refresh core
   
    - name: install certbot
      shell: snap install --classic certbot
   
    - name: change certbot location
      shell: ln -s /snap/bin/certbot /usr/bin/certbot
   
    - name: point certbot to email and dns
      shell: yes | certbot --apache --agree-tos --redirect -m admin@ozirichigozie.me -d ozirichigozie.me
 


